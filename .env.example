# =====================================================
# AUZAP - ENVIRONMENT VARIABLES EXAMPLE
# =====================================================

# =====================================================
# WAHA API (WhatsApp HTTP API)
# =====================================================
WAHA_API_URL=https://pange-waha.u5qiqp.easypanel.host
WAHA_API_KEY=your_waha_api_key
WAHA_SESSION=agenteauzap

# WAHA Dashboard Credentials (opcional)
WAHA_DASHBOARD_USERNAME=admin
WAHA_DASHBOARD_PASSWORD=your_dashboard_password

# WAHA Swagger Credentials (opcional)
WHATSAPP_SWAGGER_USERNAME=admin
WHATSAPP_SWAGGER_PASSWORD=your_swagger_password

# =====================================================
# OPENAI
# =====================================================
OPENAI_API_KEY=sk-proj-your-key-here

# =====================================================
# GROQ (Audio Transcription)
# =====================================================
GROQ_API_KEY=gsk_your-key-here

# =====================================================
# DATABASE
# =====================================================
# PostgreSQL Database (obrigatório)
# Formato: postgresql://usuario:senha@host:porta/database
# Exemplo local: postgresql://postgres:postgres@localhost:5432/auzap
# Exemplo cloud: postgresql://user:pass@host.provider.com:5432/dbname
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/auzap

# =====================================================
# SERVER
# =====================================================
PORT=3000
NODE_ENV=development
WEBHOOK_PATH=/webhook

# =====================================================
# REDIS (Cache & Session)
# =====================================================
# Connection string para Redis
# Formato: redis://[usuario:senha@]host:porta
# Exemplo local: redis://localhost:6379
# Exemplo cloud: redis://user:pass@host.provider.com:6379
REDIS_URL=redis://localhost:6379

# =====================================================
# LANGCHAIN V2 (REFATORAÇÃO)
# =====================================================
# Habilita nova arquitetura com LangChain pipelines
# V1: Sistema legado (906 linhas, lógica monolítica)
# V2: Pipelines LCEL (300 linhas, delays automáticos, anti-repetição)
# Recomendado: true (melhor performance e qualidade)
USE_LANGCHAIN_V2=true

# =====================================================
# ASAAS PAGAMENTOS (PIX com 10% desconto)
# =====================================================
# ATENÇÃO: Funcionalidade DESABILITADA por padrão
# Para habilitar, mude ENABLE_PIX_PAYMENTS para true

# Habilita/desabilita pagamentos PIX
ENABLE_PIX_PAYMENTS=false

# Obtenha sua chave em: https://www.asaas.com/api/documentation
ASAAS_API_KEY=your_asaas_api_key_here

# Ambiente: sandbox (desenvolvimento) ou production (produção)
ASAAS_ENVIRONMENT=sandbox

# IMPORTANTE - Para habilitar pagamentos PIX:
# 1. Mude ENABLE_PIX_PAYMENTS=true
# 2. Configure ASAAS_API_KEY com sua chave
# 3. Para testar, use sandbox: https://sandbox.asaas.com
# 4. Para produção, mude ASAAS_ENVIRONMENT para production
# 5. Configure webhook no Asaas: https://seu-dominio.com/webhook/asaas
# 6. Eventos: PAYMENT_RECEIVED, PAYMENT_CONFIRMED

# =====================================================
# JWT AUTHENTICATION (Multi-Tenancy)
# =====================================================
# IMPORTANTE: Mude estas secrets em PRODUÇÃO!
# Gere secrets seguros com: openssl rand -base64 32

# Secret para access tokens (15min de validade)
JWT_ACCESS_SECRET=change-this-super-secret-key-in-production-use-openssl-rand-base64-32

# Secret para refresh tokens (7 dias de validade)
JWT_REFRESH_SECRET=change-this-refresh-secret-key-in-production-use-openssl-rand-base64-32

# Expiração do access token (padrão: 15m)
# Formatos aceitos: 15m, 1h, 1d
JWT_ACCESS_EXPIRY=15m

# Expiração do refresh token (padrão: 7d)
JWT_REFRESH_EXPIRY=7d
